plugins {
    id 'java'
    id 'org.springframework.boot' version "3.1.3" apply false
//    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

//  指定项目信息
group = 'com.yicj.study'
version = '1.0-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// 注释, 默认打开单元测试
//test {
//    println("------------")
//    enabled(false)
//}
// 遍历所有任务, 如果存在build任务, 则关闭单元测试
//gradle.taskGraph.whenReady { graph ->
//    graph.getAllTasks().each { task ->
//        def subRunTask = (task.path =~ /:.+:build/)
//        if (subRunTask) {
//            // println "TRACER skipping ${task.path} "
//            test.enabled = false
//        }
//    }
//}

ext {
    //spring 框架版本号
    springBootVersion = '3.1.3'
    springCloudVersion = '2022.0.4'
    lombokMapstructBindingVersion = '0.2.0'
    // 数据库相关依赖版本号
    mybatisPlusBootStarterVersion = '3.5.3.2'
    // hutool
    hutoolVersion = '5.8.21'
    //常用工具类版本号
    commonsBeanutilsVersion = '1.9.4'
    commonsLang3Version = '3.13.0'
    commonsIoVersion = '2.13.0'
}

allprojects {
    //创建项目时的你
    //项目是java项目
    apply plugin: 'java'
    //项目是idea项目
    apply plugin: 'idea'
    //jdk版本
    sourceCompatibility = 17

    //业务编码字符集,注意这是指定源码解码的字符集[编译器]
    compileJava.options.encoding "UTF-8"
    //测试编码字符集,注意这是指定源码解码的字符集[编译器]
    compileTestJava.options.encoding "UTF-8"

    //编译JAVA文件时采用UTF-8:注意这是指定源码编码的字符集【源文件】
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.compilerArgs += ["-parameters"]
    }
    //编译JAVA文件时采用UTF-8:注意这是指定文档编码的字符集【源文件】
    tasks.withType(Javadoc) {
        options.encoding = "UTF-8"
    }
}

subprojects {
    //项目是idea项目
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    sourceCompatibility = '17'

    // 配置仓库
    repositories {
        maven {url 'https://maven.aliyun.com/repository/gradle-plugin'}
        maven {url "https://maven.aliyun.com/nexus/content/groups/public/"}
        mavenCentral()
        gradlePluginPortal()
        mavenLocal()
    }

    dependencies {
        //lombok
        compileOnly 'org.projectlombok:lombok'//仅编译时使用，不参与打包
        annotationProcessor 'org.projectlombok:lombok'//注释处理器，如使用@Slf4j注解时
        //一般上面2个够了，下面这2个是用于JUnit单元测试时使用的，如果你使用单元测试，那么下面2个一定要加上
        testCompileOnly 'org.projectlombok:lombok'//仅测试编译时使用，不参与打包
        testAnnotationProcessor 'org.projectlombok:lombok'//仅测试时使用注释处理器，不参与打包
        //jackson
        compileOnly("com.fasterxml.jackson.core:jackson-annotations")
        implementation 'org.slf4j:slf4j-api'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
        dependencies {
            dependency("cn.hutool:hutool-core:${hutoolVersion}")
            //常用工具类
            dependency "org.apache.commons:commons-lang3:${commonsLang3Version}"
            dependency "commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}"
            dependency "commons-io:commons-io:${commonsIoVersion}"
            dependency "org.mybatis:mybatis:3.5.7"
            dependency "org.mybatis:mybatis-spring:2.0.6"
            dependency "org.mybatis.spring.boot:mybatis-spring-boot-autoconfigure:2.2.0"
            dependency "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0"
            dependency "org.mybatis.spring.boot:mybatis-spring-boot-test-autoconfigure:2.2.0"
            dependency "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.0"

        }
    }
    test {
        useJUnitPlatform()
    }
}


